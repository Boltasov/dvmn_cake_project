import telebot
from telebot import types

bot = telebot.TeleBot('6398010979:AAFxPibC3gWVnLSOT9eiujMk2SirpYRyAOo')

""""""

@bot.message_handler(commands = ['start'])
def url(message):
    doc = open('–°–æ–≥–ª–∞—Å–∏–µ.doc', 'rb')
    bot.send_document(message.from_user.id, doc)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton('‚úÖ')
    markup.add(btn)
    bot.send_message(message.from_user.id, "–ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –í—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ü–æ–ª–∏—Ç–∏–∫–∏ –∏ –¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö", reply_markup = markup)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == '‚úÖ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) 
        btn1 = types.KeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å —Ç–æ—Ä—Ç üç∞')
        btn2 = types.KeyboardButton('–£–∑–Ω–∞—Ç—å —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ üïí')
        #if :
        #btn4 = types.KeyboardButton('–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞')
        #btn3 = types.KeyboardButton('–ü—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–∞–∫–∞–∑—ã')
        markup.add(btn1, btn2)
        bot.send_message(message.from_user.id, 'üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–µ–∫–∞—Ä–Ω–∏ CakeBake. –°–æ –º–Ω–æ–π –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–±—Ä–∞—Ç—å —Å–≤–æ–π –∞–≤—Ç–æ—Ä—Å–∫–∏–π —Ç–æ—Ä—Ç, –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑, –∞ —Ç–∞–∫–∂–µ —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—ã –∏ —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?', reply_markup=markup)
    elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) 
        btn1 = types.KeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å —Ç–æ—Ä—Ç üç∞')
        btn2 = types.KeyboardButton('–£–∑–Ω–∞—Ç—å —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ üïí')
        #if :
        #btn3 = types.KeyboardButton('–°–æ–≤–µ—Ç—ã –ø–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –ø—É–±–ª–∏–∫–∞—Ü–∏–∏')
        markup.add(btn1, btn2)
        bot.send_message(message.from_user.id, '–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?', reply_markup=markup) 
    elif message.text == '–£–∑–Ω–∞—Ç—å —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ üïí':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
        markup.add(btn1)
        bot.send_message(message.from_user.id, '–¶–µ–Ω—Ç—Ä - 12 —á–∞—Å–æ–≤\n–í –ø—Ä–µ–¥–µ–ª–∞—Ö –ú–ö–ê–î–∞ - 1 –¥–µ–Ω—å\n–í –ø—Ä–µ–¥–µ–ª–∞—Ö –æ–±–ª–∞—Å—Ç–∏ - 2 –¥–Ω—è', reply_markup=markup)
    elif message.text == '–ó–∞–∫–∞–∑–∞—Ç—å —Ç–æ—Ä—Ç üç∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–¢–æ—Ä—Ç A (1000 —Ä.)')
        btn2 = types.KeyboardButton('–¢–æ—Ä—Ç B (1400 —Ä.)')
        btn3 = types.KeyboardButton('–¢–æ—Ä—Ç C (3000 —Ä.)')
        btn4 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–Ω—É', reply_markup=markup)
        bot.register_next_step_handler(message, lambda message: choose_cake(message))
def choose_cake(message):
    order = {}
    if message.text == '–¢–æ—Ä—Ç A (1000 —Ä.)':
        order['price'] = 1000
    if message.text == '–¢–æ—Ä—Ç B (1400 —Ä.)':
        order['price'] = 1400
    if message.text == '–¢–æ—Ä—Ç C (3000 —Ä.)':
        order['price'] = 3000
    bot.send_message(message.from_user.id, '–ü—Ä–µ–¥–ª–∞–≥–∞—é –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º–∏ —Ç–æ—Ä—Ç–∞–º–∏ ')
    bot.send_photo(message.chat.id, photo=open('media/napoleon.jpg', 'rb'))
    bot.send_message(message.from_user.id, '–ù–∞–ø–æ–ª–µ–æ–Ω. –û–ø–∏—Å–∞–Ω–∏–µ')
    bot.send_photo(message.chat.id, photo=open("media/praga.jpg", 'rb'))
    bot.send_message(message.from_user.id, '–ü—Ä–∞–≥–∞. –û–ø–∏—Å–∞–Ω–∏–µ')
    bot.send_photo(message.chat.id, photo=open("media/murav.jpg", 'rb'))
    bot.send_message(message.from_user.id, '–ú—É—Ä–∞–≤–µ–π–Ω–∏–∫. –û–ø–∏—Å–∞–Ω–∏–µ')
    bot.send_photo(message.chat.id, photo=open("media/tiramisu.jpg", 'rb'))
    bot.send_message(message.from_user.id, '–¢–æ—Ä—Ç –¢–∏—Ä–∞–º–∏—Å—É. –û–ø–∏—Å–∞–Ω–∏–µ')
    bot.send_photo(message.chat.id, photo=open("media/medovik.png", 'rb'))
    bot.send_message(message.from_user.id, '–ú–µ–¥–æ–≤–∏–∫. –û–ø–∏—Å–∞–Ω–∏–µ')
    bot.send_photo(message.chat.id, photo=open("media/bisquit.jpg", 'rb'))
    bot.send_message(message.from_user.id, '–ë–∏—Å–∫–≤–∏—Ç–Ω—ã–π. –û–ø–∏—Å–∞–Ω–∏–µ')
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–í—ã–±—Ä–∞—Ç—å —Ç–æ—Ä—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö')
    btn2 = types.KeyboardButton('–°–æ–±—Ä–∞—Ç—å —Å–≤–æ–π ')
    btn3 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.from_user.id, f'–ö–∞–∫–æ–π –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ? –ò–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–æ–±—Ä–∞—Ç—å —Å–≤–æ–π?', reply_markup=markup)
    bot.register_next_step_handler(message, lambda message: inscription_cake(message, order))

def inscription_cake(message, order):
    if message.text == '–í—ã–±—Ä–∞—Ç—å —Ç–æ—Ä—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
        btn2 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
        markup.add(btn1, btn2)
        bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –Ω–∞–¥–ø–∏—Å—å –Ω–∞ —Ç–æ—Ä—Ç–µ?   –ú—ã –º–æ–∂–µ–º —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –Ω–∞ —Ç–æ—Ä—Ç–µ –ª—é–±—É—é –Ω–∞–¥–ø–∏—Å—å, –Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–° –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è!¬ª –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞–¥–ø–∏—Å–∏')
        if message.text == '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':
            bot.register_next_step_handler(message, lambda message: delivery(order, message))
    if message.text == '–°–æ–±—Ä–∞—Ç—å —Å–≤–æ–π ': 
        bot.register_next_step_handler(message, lambda message: custom_cake(message, order))
    if message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è':
        bot.register_next_step_handler(message, get_text_messages(message))
'''
    if message.text == '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':
        bot.register_next_step_handler(message, lambda message: delivery(order, message))
    if message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è':
        bot.register_next_step_handler(message, get_text_messages(message))
    if message.text == '':
        bot.send_message(message.from_user.id, '–í—ã –≤–≤–µ–ª–∏ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, lambda message: inscription_cake(order, message))
    if len(message.text) > 30:
        bot.send_message(message.from_user.id, '–í—ã –≤–≤–µ–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, lambda message: inscription_cake(order, message))'''
def custom_cake(order, message):
    pass

def delivery(order, message):
    pass


bot.polling(none_stop=True, interval=0)