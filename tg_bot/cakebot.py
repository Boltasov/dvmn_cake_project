import telebot
from telebot import types
from datetime import datetime
bot = telebot.TeleBot('6398010979:AAFxPibC3gWVnLSOT9eiujMk2SirpYRyAOo')


@bot.message_handler(commands = ['start'])
def url(message):
    doc = open('–°–æ–≥–ª–∞—Å–∏–µ.doc', 'rb')
    bot.send_document(message.from_user.id, doc)
    markup = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='‚úÖ')
    markup.add(btn)
    bot.send_message(message.from_user.id, "–ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –í—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ü–æ–ª–∏—Ç–∏–∫–∏ –∏ –¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö", reply_markup = markup)


@bot.callback_query_handler(func=lambda call: call.data.startswith('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è'))
def get_text_messages(message):
    
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(callback_data='–ó–∞–∫–∞–∑–∞—Ç—å —Ç–æ—Ä—Ç üç∞', text='–ó–∞–∫–∞–∑–∞—Ç—å —Ç–æ—Ä—Ç üç∞')
    btn2 = types.InlineKeyboardButton(callback_data='–£–∑–Ω–∞—Ç—å —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ üïí', text='–£–∑–Ω–∞—Ç—å —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ üïí')
    #if :
    #btn4 = types.KeyboardButton('–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞')
    #btn3 = types.KeyboardButton('–ü—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–∞–∫–∞–∑—ã')
    markup.add(btn1, btn2)
    bot.send_message(message.from_user.id, 'üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–µ–∫–∞—Ä–Ω–∏ CakeBake. –°–æ –º–Ω–æ–π –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–±—Ä–∞—Ç—å —Å–≤–æ–π –∞–≤—Ç–æ—Ä—Å–∫–∏–π —Ç–æ—Ä—Ç, –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑, –∞ —Ç–∞–∫–∂–µ —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—ã –∏ —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?', reply_markup=markup)
    


@bot.callback_query_handler(func=lambda call: call.data.startswith('–ó–∞–∫–∞–∑–∞—Ç—å —Ç–æ—Ä—Ç üç∞'))   
def order_cake(message):    
    if message.data == '–ó–∞–∫–∞–∑–∞—Ç—å —Ç–æ—Ä—Ç üç∞':
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(callback_data='–¢–æ—Ä—Ç A (1000 —Ä.)', text='–¢–æ—Ä—Ç A (1000 —Ä.)')
        btn2 = types.InlineKeyboardButton(callback_data='–¢–æ—Ä—Ç B (1400 —Ä.)', text='–¢–æ—Ä—Ç B (1400 —Ä.)')
        btn3 = types.InlineKeyboardButton(callback_data='–¢–æ—Ä—Ç C (3000 —Ä.)', text='–¢–æ—Ä—Ç C (3000 —Ä.)')
        btn4 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–Ω—É', reply_markup=markup) 
    elif message.data == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è':
        bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id,
                          text='–≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=get_text_messages())


@bot.callback_query_handler(func=lambda call: call.data.startswith('–£–∑–Ω–∞—Ç—å —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ üïí'))   
def find_out_delivery_time(message):      
    if message.data == '–£–∑–Ω–∞—Ç—å —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ üïí':
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
        markup.add(btn1)
        bot.send_message(message.from_user.id, '–¶–µ–Ω—Ç—Ä - 12 —á–∞—Å–æ–≤\n–í –ø—Ä–µ–¥–µ–ª–∞—Ö –ú–ö–ê–î–∞ - 1 –¥–µ–Ω—å\n–í –ø—Ä–µ–¥–µ–ª–∞—Ö –æ–±–ª–∞—Å—Ç–∏ - 2 –¥–Ω—è', reply_markup=markup)
    elif message.data == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è':
        bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id,
                          text='–≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=get_text_messages())


@bot.callback_query_handler(func=lambda call: call.data.startswith('–¢–æ—Ä—Ç'))  
#–¥–æ–±–∞–≤–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–æ—Ä—Ç—ã
def choose_cake(call):
    order = {}
    if call.data == '–¢–æ—Ä—Ç A (1000 —Ä.)':
        order['price'] = 1000
    if call.data == '–¢–æ—Ä—Ç B (1400 —Ä.)':
        order['price'] = 1400
    if call.data == '–¢–æ—Ä—Ç C (3000 —Ä.)':
        order['price'] = 3000
    bot.send_message(call.from_user.id, '–ü—Ä–µ–¥–ª–∞–≥–∞—é –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º–∏ —Ç–æ—Ä—Ç–∞–º–∏ ')
    bot.send_photo(call.from_user.id, photo=open('media/napoleon.jpg', 'rb'))
    bot.send_message(call.from_user.id, '–ù–∞–ø–æ–ª–µ–æ–Ω. –û–ø–∏—Å–∞–Ω–∏–µ')
    bot.send_photo(call.from_user.id, photo=open("media/praga.jpg", 'rb'))
    bot.send_message(call.from_user.id, '–ü—Ä–∞–≥–∞. –û–ø–∏—Å–∞–Ω–∏–µ')
    bot.send_photo(call.from_user.id, photo=open("media/murav.jpg", 'rb'))
    bot.send_message(call.from_user.id, '–ú—É—Ä–∞–≤–µ–π–Ω–∏–∫. –û–ø–∏—Å–∞–Ω–∏–µ')
    bot.send_photo(call.from_user.id, photo=open("media/tiramisu.jpg", 'rb'))
    bot.send_message(call.from_user.id, '–¢–æ—Ä—Ç –¢–∏—Ä–∞–º–∏—Å—É. –û–ø–∏—Å–∞–Ω–∏–µ')
    bot.send_photo(call.from_user.id, photo=open("media/medovik.png", 'rb'))
    bot.send_message(call.from_user.id, '–ú–µ–¥–æ–≤–∏–∫. –û–ø–∏—Å–∞–Ω–∏–µ')
    bot.send_photo(call.from_user.id, photo=open("media/bisquit.jpg", 'rb'))
    bot.send_message(call.from_user.id, '–ë–∏—Å–∫–≤–∏—Ç–Ω—ã–π. –û–ø–∏—Å–∞–Ω–∏–µ')
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞—Ç—å —Ç–æ—Ä—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö', text='–í—ã–±—Ä–∞—Ç—å —Ç–æ—Ä—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö')
    btn2 = types.InlineKeyboardButton(callback_data='–°–æ–±—Ä–∞—Ç—å —Å–≤–æ–π ', text='–°–æ–±—Ä–∞—Ç—å —Å–≤–æ–π ')
    btn3 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
    markup.add(btn1, btn2, btn3)
    bot.send_message(call.from_user.id, f'–ö–∞–∫–æ–π –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ? –ò–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–æ–±—Ä–∞—Ç—å —Å–≤–æ–π?', reply_markup=markup)
    #bot.register_next_step_handler(message, lambda message: inscription_cake(message, order))

@bot.callback_query_handler(func=lambda call: call.data.startswith('–°–æ–±—Ä–∞—Ç—å —Å–≤–æ–π ')) 
def custom_cake(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(callback_data='–§–æ—Ä–º–∞ 1 —É—Ä–æ–≤–µ–Ω—å', text='1 —É—Ä–æ–≤–µ–Ω—å (+400 —Ä.)')
    btn2 = types.InlineKeyboardButton(callback_data='–§–æ—Ä–º–∞ 2 —É—Ä–æ–≤–Ω—è', text='2 —É—Ä–æ–≤–Ω—è (+750 —Ä.)')
    btn3 = types.InlineKeyboardButton(callback_data='–§–æ—Ä–º–∞ 3 —É—Ä–æ–≤–Ω—è', text='3 —É—Ä–æ–≤–Ω—è (+1100 —Ä.)')
    btn4 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–≤–Ω–µ–π —É —Ç–æ—Ä—Ç–∞', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith('–§–æ—Ä–º–∞')) 
def custom_cake(message):
    '''if '1 —É—Ä–æ–≤–µ–Ω—å' in message.data:
        price+=400
    if '–∫—Ä—É–≥' in message.data:
        price+=750
    if '–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫' in message.data:
        price+=1100
    ''' 
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω–∞ —Ñ–æ—Ä–º–∞ –∫–≤–∞–¥—Ä–∞—Ç ', text='–ö–≤–∞–¥—Ä–∞—Ç (+600 —Ä.)')
    btn2 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω–∞ —Ñ–æ—Ä–º–∞ –∫—Ä—É–≥', text='–ö—Ä—É–≥ (+400 —Ä.)')
    btn3 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω–∞ —Ñ–æ—Ä–º–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫', text='–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ (+1000 —Ä.)')
    btn4 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–µ—Ç–µ —Ñ–æ—Ä–º—É —Ç–æ—Ä—Ç–∞', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith('–í—ã–±—Ä–∞–Ω–∞ —Ñ–æ—Ä–º–∞ ')) 
def default_cake(message):
    '''if '–∫–≤–∞–¥—Ä–∞—Ç' in message.data:
        price+=600
    if '–∫—Ä—É–≥' in message.data:
        price+=600
    if '–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫' in message.data:
        price+=600
    ''' 
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω —Å–∏—Ä–æ–ø –ë–µ–∑ —Ç–æ–ø–∏–Ω–≥–∞', text='–ë–µ–∑ —Ç–æ–ø–∏–Ω–≥–∞ (0 —Ä.)')
    btn2 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω —Å–∏—Ä–æ–ø –ë–µ–ª—ã–π —Å–æ—É—Å', text='–ë–µ–ª—ã–π —Å–æ—É—Å (+200 —Ä.)')
    btn3 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω —Å–∏—Ä–æ–ø –ö–∞—Ä–∞–º–µ–ª—å–Ω—ã–π —Å–∏—Ä–æ–ø', text='–ö–∞—Ä–∞–º–µ–ª—å–Ω—ã–π —Å–∏—Ä–æ–ø (+180 —Ä.)')
    btn4 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω —Å–∏—Ä–æ–ø –ö–ª–µ–Ω–æ–≤—ã–π —Å–∏—Ä–æ–ø', text='–ö–ª–µ–Ω–æ–≤—ã–π —Å–∏—Ä–æ–ø (+200 —Ä.)')
    btn5 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω —Å–∏—Ä–æ–ø –ö–ª—É–±–Ω–∏—á–Ω—ã–π —Å–∏—Ä–æ–ø', text='–ö–ª—É–±–Ω–∏—á–Ω—ã–π —Å–∏—Ä–æ–ø (+300 —Ä.)')
    btn6 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω —Å–∏—Ä–æ–ø –ß–µ—Ä–Ω–∏—á–Ω—ã–π —Å–∏—Ä–æ–ø', text='–ß–µ—Ä–Ω–∏—á–Ω—ã–π —Å–∏—Ä–æ–ø (+350 —Ä.)')
    btn7 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω —Å–∏—Ä–æ–ø –ú–æ–ª–æ—á–Ω—ã–π —à–æ–∫–æ–ª–∞–¥', text='–ú–æ–ª–æ—á–Ω—ã–π —à–æ–∫–æ–ª–∞–¥ (+200 —Ä.)')

    btn8 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8)
    bot.send_message(message.from_user.id, f'–ö–∞–∫–æ–π —Ç–æ–ø–∏–Ω–≥ –≤—ã–±–µ—Ä–µ—Ç–µ?', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith('–í—ã–±—Ä–∞–Ω —Å–∏—Ä–æ–ø')) 
def default_cake(message):
    '''if '–ë–µ–ª—ã–π —Å–æ—É—Å' in message.data or '–ö–ª–µ–Ω–æ–≤—ã–π —Å–∏—Ä–æ–ø' in message.data or '–ú–æ–ª–æ—á–Ω—ã–π —à–æ–∫–æ–ª–∞–¥' in message.data:
        price+=200
    if '–ö–∞—Ä–∞–º–µ–ª—å–Ω—ã–π' in message.data:
        price+=180
    if '–ö–ª—É–±–Ω–∏—á–Ω—ã–π' in message.data:
        price+=300
    if '–ß–µ—Ä–Ω–∏—á–Ω—ã–π' in message.data:
        price+=350
    ''' 
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω—ã —è–≥–æ–¥—ã –ï–∂–µ–≤–∏–∫–∞', text='–ï–∂–µ–≤–∏–∫–∞ (+400)')
    btn2 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω—ã —è–≥–æ–¥—ã –ú–∞–ª–∏–Ω–∞', text='–ú–∞–ª–∏–Ω–∞ (+300)')
    btn3 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω—ã —è–≥–æ–¥—ã –ì–æ–ª—É–±–∏–∫–∞', text='–ì–æ–ª—É–±–∏–∫–∞ (+450)')
    btn4 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω—ã —è–≥–æ–¥—ã –ö–ª—É–±–Ω–∏–∫–∞', text='–ö–ª—É–±–Ω–∏–∫–∞ (+500)')
    btn5 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω—ã —è–≥–æ–¥—ã –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
    btn8 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn8)
    bot.send_message(message.from_user.id, f'–ö–∞–∫–∏–º–∏ —è–≥–æ–¥–∞–º–∏ —É–∫—Ä–∞—Å–∏—Ç—å?', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith('–í—ã–±—Ä–∞–Ω—ã —è–≥–æ–¥—ã')) 
def default_cake(message):
    '''if '–ï–∂–µ–≤–∏–∫–∞' in message.data:
        price+=400
    if '–ú–∞–ª–∏–Ω–∞' in message.data:
        price+=300
    if '–ì–æ–ª—É–±–∏–∫–∞' in message.data:
        price+=450
    if '–ö–ª—É–±–Ω–∏–∫–∞' in message.data:
        price+=500
    ''' 
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω –¥–µ–∫–æ—Ä –§–∏—Å—Ç–∞—à–∫–∏ (+300)', text='–§–∏—Å—Ç–∞—à–∫–∏ (+300 —Ä.)')
    btn2 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω –¥–µ–∫–æ—Ä –ë–µ–∑–µ (+400)', text='–ë–µ–∑–µ (+400 —Ä.)')
    btn3 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω –¥–µ–∫–æ—Ä –§—É–Ω–¥—É–∫ (+350)', text='–§—É–Ω–¥—É–∫ (+350 —Ä.)')
    btn4 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω –¥–µ–∫–æ—Ä –ü–µ–∫–∞–Ω (+300)', text='–ü–µ–∫–∞–Ω (+300 —Ä.)')
    btn5 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω –¥–µ–∫–æ—Ä –ú–∞—Ä—à–º–µ–ª–ª–æ—É (+200)', text='–ú–∞—Ä—à–º–µ–ª–ª–æ—É (+200 —Ä.)')
    btn6 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω –¥–µ–∫–æ—Ä –ú–∞—Ä—Ü–∏–ø–∞–Ω (+280)', text='–ú–∞—Ä—Ü–∏–ø–∞–Ω (+280 —Ä.)')
    btn7 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω –¥–µ–∫–æ—Ä –ú–æ–ª–æ—á–Ω—ã–π —à–æ–∫–æ–ª–∞–¥', text='–ú–æ–ª–æ—á–Ω—ã–π —à–æ–∫–æ–ª–∞–¥ (+200 —Ä.)')
    btn4 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω –¥–µ–∫–æ—Ä –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
    btn8 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8)
    bot.send_message(message.from_user.id, f'–ö–∞–∫–æ–π –¥–µ–∫–æ—Ä –ø—Ä–µ–¥–ø–æ—á—Ç—ë—Ç–µ?', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data.startswith('–í—ã–±—Ä–∞–Ω –¥–µ–∫–æ—Ä'))  
def inscription_cake(message):
    '''if '–§–∏—Å—Ç–∞—à–∫–∏' in message.data or '–ü–µ–∫–∞–Ω' in message.data:
        price+=300
    if '–ë–µ–∑–µ' in message.data:
        price+=400
    if '–ú–∞—Ä—à–º–µ–ª–ª–æ—É' in message.data or '–ú–æ–ª–æ—á–Ω—ã–π —à–æ–∫–æ–ª–∞–¥' in message.data:
        price+=200
    if '–ú–∞—Ä—Ü–∏–ø–∞–Ω' in message.data:
        price+=280
    ''' 
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(callback_data='–ü–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã–±–æ—Ä—É –¥–æ—Å—Ç–∞–≤–∫–∏', text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
    btn2 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
    markup.add(btn1, btn2)
    bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –Ω–∞–¥–ø–∏—Å—å –Ω–∞ —Ç–æ—Ä—Ç–µ?   –ú—ã –º–æ–∂–µ–º —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –Ω–∞ —Ç–æ—Ä—Ç–µ –ª—é–±—É—é –Ω–∞–¥–ø–∏—Å—å, –Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–° –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è!¬ª –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞–¥–ø–∏—Å–∏', reply_markup=markup)
    print(types.InlineKeyboardMarkup())
''' –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—É—é –∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—É—é –Ω–∞–¥–ø–∏—Å—å
    if message.data == '':
        bot.send_message(message.from_user.id, '–í—ã –≤–≤–µ–ª–∏ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, lambda message: inscription_cake(message))
    elif len(message.data) > 30:
        bot.send_message(message.from_user.id, '–í—ã –≤–≤–µ–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, lambda message: inscription_cake(message))
'''     




@bot.callback_query_handler(func=lambda call: call.data.startswith('–í—ã–±—Ä–∞—Ç—å —Ç–æ—Ä—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö')) 
def default_cake(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω —Ç–æ—Ä—Ç', text='–ù–∞–ø–æ–ª–µ–æ–Ω')
    btn2 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω —Ç–æ—Ä—Ç', text='–ü—Ä–∞–≥–∞')
    btn3 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω —Ç–æ—Ä—Ç', text='–ú—É—Ä–∞–≤–µ–π–Ω–∏–∫')
    btn4 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω —Ç–æ—Ä—Ç', text='–ü—Ä–∞–≥–∞')
    btn5 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω —Ç–æ—Ä—Ç', text='–ü—Ä–∞–≥–∞')
    btn6 = types.InlineKeyboardButton(callback_data='–í—ã–±—Ä–∞–Ω —Ç–æ—Ä—Ç', text='–ü—Ä–∞–≥–∞')
    btn7 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)
    bot.send_message(message.from_user.id, f'–ö–∞–∫–æ–π —Ç–æ—Ä—Ç –≤—ã –≤—ã–±–∏—Ä–∞–µ—Ç–µ?', reply_markup=markup)





@bot.callback_query_handler(func=lambda call: call.data.startswith('–í—ã–±—Ä–∞–Ω —Ç–æ—Ä—Ç '))  
def inscription_cake(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(callback_data='–ü–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã–±–æ—Ä—É –¥–æ—Å—Ç–∞–≤–∫–∏', text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
    btn2 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
    #types.InlineKeyboard()
    markup.add(btn1, btn2)
    bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –Ω–∞–¥–ø–∏—Å—å –Ω–∞ —Ç–æ—Ä—Ç–µ?   –ú—ã –º–æ–∂–µ–º —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –Ω–∞ —Ç–æ—Ä—Ç–µ –ª—é–±—É—é –Ω–∞–¥–ø–∏—Å—å, –Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–° –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è!¬ª –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞–¥–ø–∏—Å–∏', reply_markup=markup)
    print(types.InlineKeyboardMarkup())
''' –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—É—é –∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—É—é –Ω–∞–¥–ø–∏—Å—å
    if message.data == '':
        bot.send_message(message.from_user.id, '–í—ã –≤–≤–µ–ª–∏ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, lambda message: inscription_cake(message))
    elif len(message.data) > 30:
        bot.send_message(message.from_user.id, '–í—ã –≤–≤–µ–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        bot.register_next_step_handler(message, lambda message: inscription_cake(message))
'''        

'''–¥–æ–±–∞–≤–∏–ª –∫–Ω–æ–ø–∫—É —Å–∞–º–æ–≤—ã–≤–æ–∑–∞, –Ω–µ –ø–æ–Ω—è–ª –∫–∞–∫ datetime —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å'''
@bot.callback_query_handler(func=lambda call: call.data.startswith('–ü–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã–±–æ—Ä—É –¥–æ—Å—Ç–∞–≤–∫–∏'))
def address(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(callback_data='–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é', text='–í–∞—à –∞–¥—Ä–µ—Å –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞')
    btn2 = types.InlineKeyboardButton(callback_data='–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é', text='–í–∞—à –∞–¥—Ä–µ—Å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ú–ö–ê–î–∞')
    btn3 = types.InlineKeyboardButton(callback_data='–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é', text='–í –ø—Ä–µ–¥–µ–ª–∞—Ö –æ–±–ª–∞—Å—Ç–∏')
    btn4 = types.InlineKeyboardButton(callback_data='–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é', text='–°–∞–º–æ–≤—ã–≤–æ–∑')
    btn5 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
    markup.add(btn1, btn2, btn3, btn4, btn5)
    bot.send_message(message.from_user.id, f'–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏\n–°–∞–º–æ–≤—ã–≤–æ–∑ –≤–æ–∑–º–æ–∂–µ–Ω —Å –í—Ä–µ–º—è–í—Ä–µ–º—è', reply_markup=markup)
    
@bot.callback_query_handler(func=lambda call: call.data.startswith('–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é'))
def address(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(callback_data='–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞', text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å') 
    btn2 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
    markup.add(btn1, btn2)
    bot.send_message(message.from_user.id, f'–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith('–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞'))
def address(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(callback_data='–£–∑–Ω–∞—Ç—å –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏', text='–£–∑–Ω–∞—Ç—å –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏') 
    btn2 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
    markup.add(btn1, btn2)
    bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–∫–∞–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω. \n–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith('–£–∑–Ω–∞—Ç—å –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏'))
def address(message):
    markup = types.InlineKeyboardMarkup()
    #btn1 = types.InlineKeyboardButton(callback_data='–û—Å—Ç–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É', text='–û—Å—Ç–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É') 
    btn2 = types.InlineKeyboardButton(callback_data='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è', text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è')
    markup.add(btn2)
    bot.send_message(message.from_user.id, '–¢–æ—Ä—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω:', reply_markup=markup)

bot.polling(none_stop=True, interval=0)